package be.ovam.art46.sap.model;
// Generated Oct 7, 2013 10:48:05 AM by Hibernate Tools 3.4.0.CR1


import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

import javax.persistence.*;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "PROJECT"
        , schema = "SAP")
@Audited
@AuditTable(schema = "SAP", value = "PROJECT_HISTORIEK")
@DynamicInsert
@DynamicUpdate

public class Project implements java.io.Serializable {


    private String projectId;
    private Character actiefS;
    private String projectB;
    private String budgetairArtikel;
    private String budgetairArtikelB;
    private String schuldeiser;
    private String contactpersoon;
    private Date emailD;
    private Date check40MailD;
    private Date checkFactuurMailD;
    private BigDecimal creditTotaal;
    private BigDecimal debetTotaal;
    private BigDecimal initieelBedrag;
    private String initieelAchtNr;
    private int boekjaar;
    private String wbsNr;
    private Date creatieTs;
    private Date wijzigTs;

    private Date spreidingValidatieD;
    private String spreidingValidatieUid;

    private BigDecimal afTeBoekenBedrag;

    private BigDecimal voorgesteldAfTeBoekenBedrag;

    private boolean vastleggingMagAfgeboektWorden = false;

    private List<Spreiding> spreiding = new ArrayList<Spreiding>();

    private Integer aanvraagid;

    public Project() {
    }


    @Id
    @Column(name = "PROJECT_ID", unique = true, nullable = false, length = 20)
    public String getProjectId() {
        return this.projectId;
    }

    public void setProjectId(String projectId) {
        this.projectId = projectId;
    }


    @Column(name = "PROJECT_B")
    public String getProjectB() {
        return this.projectB;
    }

    public void setProjectB(String projectB) {
        this.projectB = projectB;
    }


    @Column(name = "BUDGETAIR_ARTIKEL", length = 20)
    public String getBudgetairArtikel() {
        return this.budgetairArtikel;
    }

    public void setBudgetairArtikel(String budgetairArtikel) {
        this.budgetairArtikel = budgetairArtikel;
    }


    @Column(name = "BUDGETAIR_ARTIKEL_B")
    public String getBudgetairArtikelB() {
        return this.budgetairArtikelB;
    }

    public void setBudgetairArtikelB(String budgetairArtikelB) {
        this.budgetairArtikelB = budgetairArtikelB;
    }


    @Column(name = "SCHULDEISER", length = 40)
    public String getSchuldeiser() {
        return this.schuldeiser;
    }

    public void setSchuldeiser(String schuldeiser) {
        this.schuldeiser = schuldeiser;
    }


    @Column(name = "CONTACTPERSOON", length = 40)
    public String getContactpersoon() {
        return this.contactpersoon;
    }

    public void setContactpersoon(String contactpersoon) {
        this.contactpersoon = contactpersoon;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "EMAIL_D", length = 10)
    public Date getEmailD() {
        return this.emailD;
    }

    public void setEmailD(Date emailD) {
        this.emailD = emailD;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "CHECK_40_MAIL_D", length = 10)
    public Date getCheck40MailD() {
        return this.check40MailD;
    }

    public void setCheck40MailD(Date check40MailD) {
        this.check40MailD = check40MailD;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "CHECK_FACTUUR_MAIL_D", length = 10)
    public Date getCheckFactuurMailD() {
        return this.checkFactuurMailD;
    }

    public void setCheckFactuurMailD(Date checkFactuurMailD) {
        this.checkFactuurMailD = checkFactuurMailD;
    }


    @Column(name = "CREDIT_TOTAAL", precision = 13)
    public BigDecimal getCreditTotaal() {
        return this.creditTotaal;
    }

    public void setCreditTotaal(BigDecimal creditTotaal) {
        this.creditTotaal = creditTotaal;
    }


    @Column(name = "DEBET_TOTAAL", precision = 13)
    public BigDecimal getDebetTotaal() {
        return this.debetTotaal;
    }

    public void setDebetTotaal(BigDecimal debetTotaal) {
        this.debetTotaal = debetTotaal;
    }


    @Column(name = "INITIEEL_BEDRAG", precision = 13)
    public BigDecimal getInitieelBedrag() {
        return this.initieelBedrag;
    }

    public void setInitieelBedrag(BigDecimal initieelBedrag) {
        this.initieelBedrag = initieelBedrag;
    }


    @Column(name = "INITIEEL_ACHT_NR", length = 20)
    public String getInitieelAchtNr() {
        return this.initieelAchtNr;
    }

    public void setInitieelAchtNr(String initieelAchtNr) {
        this.initieelAchtNr = initieelAchtNr;
    }


    @Column(name = "BOEKJAAR", nullable = false)
    public int getBoekjaar() {
        return this.boekjaar;
    }

    public void setBoekjaar(int boekjaar) {
        this.boekjaar = boekjaar;
    }


    @Column(name = "WBS_NR", length = 24)
    public String getWbsNr() {
        return this.wbsNr;
    }

    public void setWbsNr(String wbsNr) {
        this.wbsNr = wbsNr;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATIE_TS", nullable = false, length = 26)
    public Date getCreatieTs() {
        return this.creatieTs;
    }

    public void setCreatieTs(Date creatieTs) {
        this.creatieTs = creatieTs;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "WIJZIG_TS", nullable = false, length = 26)
    public Date getWijzigTs() {
        return this.wijzigTs;
    }

    public void setWijzigTs(Date wijzigTs) {
        this.wijzigTs = wijzigTs;
    }


    @Column(name = "AANVRAAGID")
    public Integer getAanvraagid() {
        return this.aanvraagid;
    }

    public void setAanvraagid(Integer aanvraagid) {
        this.aanvraagid = aanvraagid;
    }


    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "SPREIDING_VALIDATIE_TS", nullable = false, length = 26)
    public Date getSpreidingValidatieD() {
        return spreidingValidatieD;
    }


    public void setSpreidingValidatieD(Date spreidingValidatieD) {
        this.spreidingValidatieD = spreidingValidatieD;
    }


    @Column(name = "SPREIDING_VALIDATIE_UID", length = 40)
    public String getSpreidingValidatieUid() {
        return spreidingValidatieUid;
    }


    public void setSpreidingValidatieUid(String spreidingValidatieUid) {
        this.spreidingValidatieUid = spreidingValidatieUid;
    }


    @Column(length = 1, name = "ACTIEF_S")
    public Character getActiefS() {
        return actiefS;
    }

    public void setActiefS(Character actiefS) {
        this.actiefS = actiefS;
    }


    /*@OneToMany(orphanRemoval = true, cascade = CascadeType.ALL, fetch = FetchType.EAGER)
     @JoinColumn(name = "PROJECT_ID")
     @Fetch(FetchMode.SUBSELECT)
     @Sort(type = SortType.NATURAL)
     @ElementCollection(targetClass = Spreiding.class)
    @AuditJoinTable(schema="SAP",name="PROJECT_SPREIDING_HISTORIEK" )
*/
    @OneToMany(mappedBy = "project", fetch = FetchType.LAZY, targetEntity = Spreiding.class)
/*	 @AuditJoinTable(schema="SAP",name="PROJECT_SPREIDING_HISTORIEK" )*/
    @NotAudited
    public List<Spreiding> getSpreiding() {
        return spreiding;
    }


    public void setSpreiding(List<Spreiding> spreiding) {
        this.spreiding = spreiding;
    }


    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result
                + ((projectId == null) ? 0 : projectId.hashCode());
        return result;
    }


    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Project other = (Project) obj;
        if (projectId == null) {
            if (other.projectId != null)
                return false;
        } else if (!projectId.equals(other.projectId))
            return false;
        return true;
    }


    @Column(name = "AF_TE_BOEKEN_BEDRAG")
    public BigDecimal getAfTeBoekenBedrag() {
        return afTeBoekenBedrag;
    }


    public void setAfTeBoekenBedrag(BigDecimal afTeBoekenBedrag) {
        this.afTeBoekenBedrag = afTeBoekenBedrag;
    }


    @Transient
    public boolean isVastleggingMagAfgeboektWorden() {
        return vastleggingMagAfgeboektWorden;
    }


    public void setVastleggingMagAfgeboektWorden(
            boolean vastleggingMagAfgeboektWorden) {
        this.vastleggingMagAfgeboektWorden = vastleggingMagAfgeboektWorden;
    }


    @Transient
    public BigDecimal getVoorgesteldAfTeBoekenBedrag() {
        return voorgesteldAfTeBoekenBedrag;
    }


    public void setVoorgesteldAfTeBoekenBedrag(
            BigDecimal voorgesteldAfTeBoekenBedrag) {
        this.voorgesteldAfTeBoekenBedrag = voorgesteldAfTeBoekenBedrag;
    }


    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder.append("Project [projectId=");
        builder.append(projectId);
        builder.append(", projectB=");
        builder.append(projectB);
        builder.append(", spreidingValidatieD=");
        builder.append(spreidingValidatieD);
        builder.append(", afTeBoekenBedrag=");
        builder.append(afTeBoekenBedrag);
        builder.append(", spreiding=");
        for (Spreiding item : spreiding) {

            builder.append(item.toString());
        }

        builder.append("]");
        return builder.toString();
    }

    public void addSpreiding(int jaar, BigDecimal bedrag) {
        Spreiding spreidingItem = new Spreiding();
        spreidingItem.setBedrag(bedrag);
        spreidingItem.setJaar(jaar);

        spreiding.add(spreidingItem);

    }


}


